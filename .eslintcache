[{"/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/index.js":"1","/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/GlobalStyle.js":"2","/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/AppScreenStyle.js":"3","/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/App.js":"4","/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/components/ChatListItem.js":"5","/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/components/ChatIntro.js":"6","/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/components/ChatWindow.js":"7","/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/components/MessageItem.js":"8","/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/components/NewChat.js":"9","/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/components/Login.js":"10","/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/api.js":"11","/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/firebaseConfig.js":"12"},{"size":198,"mtime":1609018681293,"results":"13","hashOfConfig":"14"},{"size":316,"mtime":1609703290434,"results":"15","hashOfConfig":"14"},{"size":1678,"mtime":1609092841283,"results":"16","hashOfConfig":"14"},{"size":3015,"mtime":1610052785944,"results":"17","hashOfConfig":"14"},{"size":1999,"mtime":1609952384366,"results":"18","hashOfConfig":"14"},{"size":1091,"mtime":1609102766569,"results":"19","hashOfConfig":"14"},{"size":8377,"mtime":1609966190862,"results":"20","hashOfConfig":"14"},{"size":1057,"mtime":1609964229836,"results":"21","hashOfConfig":"14"},{"size":2807,"mtime":1610037804313,"results":"22","hashOfConfig":"14"},{"size":1284,"mtime":1610052689429,"results":"23","hashOfConfig":"14"},{"size":498,"mtime":1610040085491,"results":"24","hashOfConfig":"14"},{"size":419,"mtime":1610037612438,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"6opfhv",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/index.js",[],["53","54"],"/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/GlobalStyle.js",[],"/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/AppScreenStyle.js",[],"/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/App.js",["55"],"/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/components/ChatListItem.js",[],"/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/components/ChatIntro.js",[],"/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/components/ChatWindow.js",["56"],"import React, {useState, useEffect, useRef} from 'react';\nimport styled from 'styled-components';\n\nimport MessageItem from './MessageItem';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SendIcon from '@material-ui/icons/Send';\nimport MicIcon from '@material-ui/icons/Mic';\nimport EmojiPicker from 'emoji-picker-react';\n\nconst ChatWindow = ({user}) => {\n  \n  const body = useRef();\n\n  let recognition = null;\n  let SpeachRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n\n  if (SpeachRecognition){\n    recognition =  new SpeachRecognition();\n  }\n\n  const [emojiOpen, setEmojiOpen] = useState(false);\n  const [text, setText] = useState('');\n  const [listening, setListening] = useState(false);\n  const [list, setList] = useState([\n    {\n      author: 123, \n      body: <>Lorem, ipsum dolor sit</>\n    }, \n    { author: 123,\n      body: <>Lorem, ipsum</>\n    }, \n    { author: 1234,\n      body: <>Lorem, ipsum dolor sit</>\n    },\n    { author: 1234,\n      body: <>Lorem, ipsum dolor sit</>\n    },\n    { author: 1234,\n      body: <>Lorem, ipsum dolor sit</>\n    },\n    { author: 1234,\n      body: <>Lorem, ipsum dolor sit</>\n    },\n    { author: 1234,\n      body: <>Lorem, ipsum dolor sit</>\n    },\n    { author: 1234,\n      body: <>Lorem, ipsum dolor sit</>\n    },\n    { author: 1234,\n      body: <>Lorem, ipsum dolor sit</>\n    },\n    { author: 1234,\n      body: <>Lorem, ipsum dolor sit</>\n    },\n    { author: 1234,\n      body: <>Lorem, ipsum dolor sit</>\n    },\n    { author: 1234,\n      body: <>Lorem, ipsum dolor sit</>\n    },\n    { author: 1234,\n      body: <>Lorem, ipsum dolor sit</>\n    },\n    { author: 1234,\n      body: <>Lorem, ipsum dolor sit</>\n    },\n    { author: 1234,\n      body: <>Lorem, ipsum dolor sit</>\n    },\n    { author: 1234,\n      body: <>Lorem, ipsum dolor sit</>\n    },\n    { author: 1234,\n      body: <>Lorem, ipsum dolor sit</>\n    },\n    { author: 1234,\n      body: <>Lorem, ipsum dolor sit</>\n    },\n    { author: 1234,\n      body: <>Lorem, ipsum dolor sit</>\n    },\n    { author: 1234,\n      body: <>Lorem, ipsum dolor sit</>\n    },\n  ]);\n\n  // useEffect(() => {\n  //     if (body.current.scrollHeight > body.current.offsetHeight){\n  //       body.current.scrollTop = body.current.offsetHeight;\n  //     }\n  // }, [list])\n\n  useEffect(() => {\n    const bodyHeight = body.current.clientHeight;\n    body.current.scrollTop = bodyHeight;\n  }, [list])\n\n  const handleEmojiClick = (e, emojiObject) => {\n      setText(text + emojiObject.emoji);\n  }\n\n  const handleOpenEmoji = () => {\n     setEmojiOpen(true);\n  }\n\n  const handleEmojiClose = () => {\n     setEmojiOpen(false)\n  }\n\n  const handleSendClick = () => {\n\n  }\n\n  const handleMicClick = () => {\n    if (recognition){ \n      recognition.onstart = () => {\n        setListening(true);\n      }\n      recognition.onend = () => {\n        setListening(false);\n      }\n      recognition.onresult = (e) => {\n        setText(e.results[0][0].transcript);\n      }\n\n      recognition.start();\n    }\n  }\n\n    return (\n        <StyledChatWindow>\n           <ChatWindowHeader>\n               <ChatWindowHeaderInfo>\n                   <img className='chatWindow--avatar' src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.w3schools.com%2Fw3images%2Favatar2.png&f=1&nofb=1\" alt=\"\"/>\n                   <div className=\"chatWindow--name\">FÃ¡bio</div>\n               </ChatWindowHeaderInfo>\n               <ChatWindowHeaderButtons>\n                   <div className=\"chatWindow--btn\">\n                       <SearchIcon style={{color: '#919191'}}/>\n                   </div>\n                   <div className=\"chatWindow--btn\">\n                       <AttachFileIcon style={{color: '#919191'}}/>\n                   </div>\n                   <div className=\"chatWindow--btn\">\n                       <MoreVertIcon style={{color: '#919191'}}/>\n                   </div>\n               </ChatWindowHeaderButtons>\n           </ChatWindowHeader>\n           <ChatWiwdowBody ref={body}>\n              {list.map((item, key) => \n                 <MessageItem\n                 user={user}\n                 data={item} \n                 key={key}/>\n              )}\n           </ChatWiwdowBody>\n           <ChatWindowEmojiArea emojiOpen={emojiOpen}>\n             <EmojiPicker \n              disableSearchBar\n              disableSkinTonePicker\n              onEmojiClick={handleEmojiClick}\n             />\n           </ChatWindowEmojiArea>\n           <ChatWindowFooter>\n                <ChatWindowPre>\n                  <div style={{width: emojiOpen ? 40 : 0}} onClick={handleEmojiClose} className=\"chatWindow--btn\">\n                    <CloseIcon style={{color: '#919191'}}/>\n                  </div>\n                  <div onClick={handleOpenEmoji} className=\"chatWindow--btn\">\n                     <InsertEmoticonIcon style={{color: emojiOpen ? '#009688' : '#919191'}}/>\n                  </div>\n                </ChatWindowPre>\n                <ChatWindowInputarea>\n                    <input \n                    placeholder='write a message' \n                    value={text} \n                    onChange={e => setText(e.target.value)}\n                    type=\"text\" \n                    name=\"\" \n                    id=\"\"/>\n                </ChatWindowInputarea>\n                <ChatWindowPos>\n                  {text ? \n                  <div onClick={handleSendClick} className=\"chatWindow--btn\">\n                    <SendIcon style={{color: '#919191'}}/>\n                  </div> :\n                  <div onClick={handleMicClick} className=\"chatWindow--btn\">\n                    <MicIcon style={{color: listening ? '#126ECE' : '#919191'}}/>\n                  </div> }\n                </ChatWindowPos>\n           </ChatWindowFooter>\n        </StyledChatWindow>\n    )\n}\n\nconst StyledChatWindow = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nconst ChatWindowHeader = styled.div`\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n   height: 60px;\n   border-bottom: 1px solid #CCC;\n`;\n\nconst ChatWindowHeaderInfo = styled.div`\n   display: flex;\n   align-items: center;\n   cursor: pointer;\n   color: black;\n   font-size: 17px;\n   img {\n       height: 40px;\n       width: 40px;\n       border-radius: 50%;\n       margin: 0 15px;\n   }\n`;\n\nconst ChatWindowHeaderButtons = styled.div`\n    display: flex;\n    margin-right: 15px;\n    .chatWindow--btn{\n       cursor: pointer;\n        width: 40px;\n        height: 40px;\n        border-radius: 50%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n`;\n\nconst ChatWiwdowBody = styled.div`\n  padding: 0.7rem 1.5rem;\n  flex: 1;\n  overflow-y: auto;\n  background: #E5DDD5;\n  background-size: cover;\n  background-image: url('https://user-images.githubusercontent.com/15075759/28719144-86dc0f70-73b1-11e7-911d-60d70fcded21.png');\n  &::-webkit-scrollbar{\n      width: 6px;\n      height: 6px;\n  }\n  &::-webkit-scrollbar-thumb{\n    background: rgba(0, 0, 0, .2);\n  }\n`;\n\nconst ChatWindowFooter = styled.div`\n   height: 62px;\n   display: flex;\n   align-items: center;\n   .chatWindow--btn{\n        width: 40px;\n        height: 40px;\n        border-radius: 50%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        margin: 0 3px;\n        cursor: pointer;\n        overflow: hidden;\n        transition: all 0.3s ease;\n    }\n\n`;\n\nconst ChatWindowPre = styled.div`\n   display: flex;\n   margin: 0 15px;\n`;\n\nconst ChatWindowPos = styled(ChatWindowPre)``;\n\nconst ChatWindowInputarea = styled.div`\n  flex: 1;\n  input {\n      width: 100%;\n      height: 40px;\n      border: none;\n      outline: none;\n      background: #FFF;\n      border-radius: 25px;\n      font-size: 15px;\n      color: #4A4A4A;\n      padding-left: 15px;\n  }\n`;\n\nconst ChatWindowEmojiArea = styled.div`\n    height: ${props => props.emojiOpen ? '200px' : '0px'};\n    overflow-y: hidden;\n    transition: all 0.3s ease;\n    aside.emoji-picker-react{\n      width: auto;\n      background: none;\n    }\n    .emoji-picker-react .emoji-group:before{\n       background:none;\n    }\n\n`;\n\n\n\n\nexport default ChatWindow;\n","/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/components/MessageItem.js",[],"/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/components/NewChat.js",["57"],"import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst NewChat = ({activeContact, setActiveContact, user, chatlist}) => {\n    const imageUrl = 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.w3schools.com%2Fw3images%2Favatar2.png&f=1&nofb=1';\n    const [contactList, setContactList] = useState([\n        {id: 123, avatar: imageUrl, name: 'FÃ¡bio'},\n        {id: 123, avatar: imageUrl, name: 'FÃ¡bio'},\n        {id: 123, avatar: imageUrl, name: 'FÃ¡bio'},\n        {id: 123, avatar: imageUrl, name: 'FÃ¡bio'},]);\n\n    return (\n        <StyledNewChat active={activeContact}>\n            <NewChatHead>\n                <NewChatBackbutton onClick={() => setActiveContact(false)}>\n                  <ArrowBackIcon style={{color: '#FFF'}}/>\n                </NewChatBackbutton>\n                <NewChatHeadtitle>\n                  New Chat\n                </NewChatHeadtitle>\n            </NewChatHead>\n            <NewChatList>\n              {contactList.map((item, key) => \n                 <NewChaItem key={key}>\n                    <img src={item.avatar} alt=\"\"/>\n                    <NewChatItemName>\n                      {item.name}\n                    </NewChatItemName>\n                 </NewChaItem>\n              )}\n            </NewChatList>\n        </StyledNewChat>\n    )\n}\n\n\nconst StyledNewChat = styled.div`\n    width: 30%;\n    max-width: 415px;\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    background: #FFF;\n    display: flex;\n    flex-direction: column;\n    border-right: 1px solid #DDD;\n    transition: transform .3s ease-in-out;\n    transform: ${props => props.active ? 'translateX(0%)' : 'translateX(-100%)'}\n`;\n\nconst NewChatHead = styled.div`\n    display: flex;\n    background: #00BFA5;\n    align-items: center;\n    padding: 60px 15px 15px 15px;\n`;\n\nconst NewChatBackbutton = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n`;\n\nconst NewChatHeadtitle = styled.div`\n    font-size: 19px;\n    height: 40px;\n    line-height: 40px;\n    font-weight: bold;\n    color: #FFF;\n    margin-left: 20px;\n    flex: 1;\n`;\n\nconst NewChatList = styled.div`\n    flex: 1;\n    &::-webkit-scrollbar{\n        width: 6px;\n        height: 6px;\n    }\n    &::-webkit-scrollbar-thumb{\n        background-color: rgba(0, 0, 0, .2);\n    }\n`;\n\nconst NewChaItem = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 15px;\n    cursor: pointer;\n    img {\n        width: 50px;\n        height: 50px;\n        border-radius: 50%;\n        margin-right: 15px;\n    }\n    &:hover{\n        background: #F5F5F5;\n    }\n`;\n\nconst NewChatItemName = styled.div`\n   font-size: 17px;\n   color: black;\n`;\n\nexport default NewChat;\n","/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/components/Login.js",[],"/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/api.js",["58"],"/home/fabio/Documents/React/WhatsAppClone/whatsapp_clone/src/firebaseConfig.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":28,"column":20,"nodeType":"65","messageId":"66","endLine":28,"endColumn":31},{"ruleId":"63","severity":1,"message":"67","line":29,"column":16,"nodeType":"65","messageId":"66","endLine":29,"endColumn":23},{"ruleId":"63","severity":1,"message":"68","line":7,"column":25,"nodeType":"65","messageId":"66","endLine":7,"endColumn":39},{"ruleId":"63","severity":1,"message":"69","line":8,"column":7,"nodeType":"65","messageId":"66","endLine":8,"endColumn":9},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'setChatlist' is assigned a value but never used.","Identifier","unusedVar","'setList' is assigned a value but never used.","'setContactList' is assigned a value but never used.","'db' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]